{"version":3,"sources":["../src/todoApp_v1.js"],"names":["todo","state","action","type","id","text","completed","todos","undefined","map","t","visibilityFilter","filter","combineReducers","Redux","todoApp","createStore","store","handleKeyDown","e","keyCode","preventDefault","btn","hasFocus","focus","handleKeyUp","click","handleButtonClick","inp","value","dispatch","nextTodoId","Component","React","FilterLink","currentFilter","children","getVisibleTodos","TodoApp","render","props","visibleTodos","node","buttonNode","textDecoration","ReactDOM","getState","document","getElementById","subscribe"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport * as Redux from \"@reduxjs/toolkit\";\nimport {current} from \"@reduxjs/toolkit\";\n\n\n//Reducer handling updating individual todo objects\nconst todo = (state = {}, action) => {\n   switch (action.type) {\n      case 'ADD_TODO':\n         return {\n            id: action.id,\n            text: action.text,\n            completed:false\n         };\n      case 'TOGGLE_TODO':\n         if (state.id !== action.id) {\n            return state;//Not the todo we're looking for.\n         }\n         return {\n            ...state,\n            completed: !state.completed\n         };\n      default:\n         return state;\n   }\n}\n\n// Reducer handling updating the list containing all todo objects\nconst todos = (state = [], action) => {\n   switch (action.type) {\n      case 'ADD_TODO':\n         return [\n            ...state,\n            todo(undefined, action)\n         ];\n      case 'TOGGLE_TODO':\n         return state.map(t => todo(t, action));\n      default:\n         return state;\n   }\n};\n\n// Reducer handling updating the visibility filter for the app\nconst visibilityFilter = (state = 'SHOW_ALL', action) => {\n   switch (action.type) {\n      case 'SET_VISIBILITY_FILTER':\n         return action.filter;\n      default:\n         return state;\n   }\n};\n\n// Reducer handling combining the list of todos with the visibility filter, representing the\n// final UI state\nconst { combineReducers } = Redux;\nconst todoApp = combineReducers({\n   todos,\n   visibilityFilter\n});\n\nconst { createStore } = Redux;\nconst store = createStore(todoApp);\n\n\n/************************************* Render UI ******************************/\n\nconst handleKeyDown = (e) => {\n   if (e.keyCode === 13) {\n      e.preventDefault();\n      if (btn.hasFocus) return;\n      btn.focus();\n   }\n}\n\nconst handleKeyUp = (e) => {\n   if (e.keyCode === 13) {\n      e.preventDefault();\n      btn.click();\n   }\n};\n\nconst handleButtonClick = (e) => {\n   if (inp.value === '' || inp.value === undefined) return inp.focus();\n   return (\n      store.dispatch({\n         type: 'ADD_TODO',\n         text: inp.value,\n         id: nextTodoId++\n      }),\n         inp.value ='',\n         inp.focus()\n   );\n};\n\nconst { Component } = React;\n\nconst FilterLink = ({\n                       filter,\n                       currentFilter,\n                       children\n                    }) => {\n   if (filter === currentFilter) {\n      return <span>{children}</span>;\n   }\n   return (\n      <a\n         href='#'\n         onClick={e => {\n            e.preventDefault();\n            store.dispatch({\n               type: 'SET_VISIBILITY_FILTER',\n               filter\n            });\n         }}\n      >\n         {children}\n      </a>\n   );\n};\n\nconst getVisibleTodos = (\n   todos,\n   filter\n) => {\n   switch (filter) {\n      case 'SHOW_ALL':\n         return todos;\n      case 'SHOW_COMPLETED':\n         return todos.filter(\n            t => t.completed\n         );\n      case 'SHOW_ACTIVE':\n         return todos.filter(\n            t => !t.completed\n         );\n   }\n};\n\nlet inp;\nlet btn;\nlet nextTodoId = 0;\nclass TodoApp extends Component {\n   render() {\n      const {\n         todos,\n         visibilityFilter\n      } = this.props;\n      const visibleTodos = getVisibleTodos(\n         todos,\n         visibilityFilter\n      );\n      return (\n         <div>\n            <input\n               ref={node => {\n                  inp = node;\n               }}\n               onKeyUp={handleKeyUp}\n               onKeyDown={handleKeyDown}\n            />\n            <button\n               ref={buttonNode => {\n                  btn = buttonNode;\n               }}\n               onClick={handleButtonClick}\n               onKeyDown={handleKeyDown}\n               onKeyUp={handleKeyUp}\n            >\n               Add Todo\n            </button>\n            <ul>\n               {visibleTodos.map(todo =>\n                  <li\n                     key={todo.id}\n                     onClick={() => {\n                        store.dispatch({\n                           type: 'TOGGLE_TODO',\n                           id: todo.id\n                        });\n                     }}\n                     style={{\n                        textDecoration: todo.completed? 'line-through' : 'none'\n                     }}\n                  >\n                     {todo.text}\n                  </li>\n               )}\n            </ul>\n            <p>\n               Show:\n               {' '}\n               <FilterLink\n                  filter='SHOW_ALL'\n                  currentFilter={visibilityFilter}\n               >\n                  All\n               </FilterLink>\n               {' '}\n               <FilterLink\n                  filter='SHOW_ACTIVE'\n                  currentFilter={visibilityFilter}\n               >\n                  Active\n               </FilterLink>\n               {' '}\n               <FilterLink\n                  filter='SHOW_COMPLETED'\n                  currentFilter={visibilityFilter}\n               >\n                  Completed\n               </FilterLink>\n            </p>\n         </div>\n      )\n   }\n};\n\nconst render = () => {\n   ReactDOM.render(\n      <TodoApp\n         {...store.getState()}\n      />, document.getElementById('root')\n   );\n};\n\n// Render the application, in response to the current application state.\n// Calls render every time the store changes.\nstore.subscribe(render);\n// Call render once to render the initial state.\nrender();\n"],"file":"todoApp_v1.js"}