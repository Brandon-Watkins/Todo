{"version":3,"sources":["logo.svg","common/Provider.js","todo/todoStore.js","todo/AddTodo.js","todo/Todo.js","todo/TodoList.js","todo/FilterLink.js","todo/Footer.js","todo/TodoApp.js","todo/App.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Provider","store","this","props","children","Component","childContextTypes","PropTypes","object","todo","state","action","type","id","text","completed","todoStore","combineReducers","todos","undefined","map","t","filter","visibilityFilter","createStore","nextTodoId","AddTodo","input","React","useRef","button","onClick","focus","onLoad","ref","node","onKeyUp","e","Window","event","keyCode","preventDefault","click","onKeyDown","hasFocus","buttonNode","value","temp","dispatch","contextTypes","Todo","document","getElementsByTagName","onContextMenu","stopPropagation","style","textDecoration","TodoList","getState","useEffect","console","log","unsubscribe","subscribe","render","getVisibleTodos","key","FilterLink","href","Footer","TodoApp","getElementById","className","ReactDOM","App","src","logo","alt","TodoRender","target","rel","Boolean","window","location","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,qVCGrCC,E,gLAEA,MAAO,CACJC,MAAOC,KAAKC,MAAMF,S,+BAIrB,OAAOC,KAAKC,MAAMC,a,GAPDC,aAUvBL,EAASM,kBAAoB,CAC1BL,MAAOM,IAAUC,QAGLR,Q,sBCdTS,EAAO,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAClC,OAAQA,EAAOC,MACZ,IAAK,WACF,MAAO,CACJC,GAAIF,EAAOE,GACXC,KAAMH,EAAOG,KACbC,WAAU,GAEhB,IAAK,cACF,OAAIL,EAAMG,KAAOF,EAAOE,GACdH,EAEH,2BACDA,GADN,IAEGK,WAAYL,EAAMK,YAExB,QACG,OAAOL,IAiCVM,EAAYC,YAAgB,CAC/BC,MA7BW,WAAyB,IAAxBR,EAAuB,uDAAf,GAAIC,EAAW,uCACnC,OAAQA,EAAOC,MACZ,IAAK,WACF,MAAM,GAAN,mBACMF,GADN,CAEGD,OAAKU,EAAWR,KAEtB,IAAK,cACF,OAAOD,EAAMU,KAAI,SAAAC,GAAC,OAAIZ,EAAKY,EAAGV,MACjC,IAAK,cACF,OAAOD,EAAMY,QAAO,SAAAD,GAAC,OAAIA,EAAER,KAAOF,EAAOE,MAC5C,QACG,OAAOH,IAkBba,iBAbsB,WAAiC,IAAhCb,EAA+B,uDAAvB,WAAYC,EAAW,uCACtD,OAAQA,EAAOC,MACZ,IAAK,wBACF,OAAOD,EAAOW,OACjB,QACG,OAAOZ,MAaDT,EAFDuB,YAAYR,GCtDtBS,G,YAAa,GACXC,EAAU,SAACvB,EAAD,GAAuB,IAAbF,EAAY,EAAZA,MACnB0B,EAAQC,IAAMC,OAAO,MACrBC,EAASF,IAAMC,OAAO,MAC1B,OACG,yBACGhB,GAAI,UACJkB,QAAS,kBACNJ,EAAMK,SACTC,OAAQ,kBACLN,EAAMK,UAET,2BACGnB,GAAI,eACJqB,IAAK,SAAAC,GACFR,EAAQQ,GAEXC,QAAS,SAACC,GAEW,MADlBA,EAAIA,GAAKC,OAAOC,OACVC,UACHH,EAAEI,iBACFX,EAAOY,UAGbC,UAAW,SAACN,GAET,GAAkB,MADlBA,EAAIA,GAAKC,OAAOC,OACVC,QAAgB,CAEnB,GADAH,EAAEI,iBACEX,EAAOc,SAAU,OACrBd,EAAOE,YAIhB,4BACGnB,GAAI,gBACJqB,IAAK,SAAAW,GACFf,EAASe,GAEZd,QAAS,WACN,GAAoB,KAAhBJ,EAAMmB,YAAgC3B,IAAhBQ,EAAMmB,MAAqB,OAAOnB,EAAMK,QAClE,IAAMe,EAAOpB,EAAMmB,MACnBnB,EAAMK,QACNL,EAAMmB,MAAQ,GACd7C,EAAM+C,SAAS,CACZpC,KAAM,WACNE,KAAMiC,EACNlC,GAAIY,QAbb,cAsBTC,EAAQuB,aAAe,CACpBhD,MAAOM,IAAUC,QAELkB,QC1DTwB,G,YAAO,SAAC,EAAD,GAAyC,IAAtCnC,EAAqC,EAArCA,UAAWD,EAA0B,EAA1BA,KAAMD,EAAoB,EAApBA,GAAQZ,EAAY,EAAZA,MACtC,OACG,wBACGY,GAAI,OACJkB,QAAS,WACN9B,EAAM+C,SAAS,CACZpC,KAAM,cACNC,OAEHsC,SAASC,qBAAqB,SAAS,GAAGpB,SAE7CqB,cAAe,SAAAhB,GACZA,EAAEI,kBAAoBJ,EAAEiB,kBACxBrD,EAAM+C,SAAS,CACZpC,KAAM,cACNC,OAEHsC,SAASC,qBAAqB,SAAS,GAAGpB,SAE7CuB,MAAO,CACJC,eAAgBzC,EAAW,eAAiB,SAG9CD,KAIVoC,EAAKD,aAAe,CACjBhD,MAAOM,IAAUC,QAGL0C,QC5BTO,EAAW,SAACtD,EAAD,GAAuB,IAAbF,EAAY,EAAZA,MAClBS,EAAQT,EAAMyD,WAQpB,OAPA9B,IAAM+B,WAAW,WACdC,QAAQC,IAAI,2CACZ,IAAMC,EAAc7D,EAAM8D,UAAUC,GACpC,OAAO,WACJF,OAEH,CAAC7D,EAAMyD,WAAWxC,QAElB,wBAAIL,GAAI,YACJoD,EAAgBvD,EAAMQ,MAAOR,EAAMa,kBAAkBH,KAAI,SAAAX,GAAI,OAC3D,kBAAC,EAAD,eACGyD,IAAKzD,EAAKI,IACNJ,SAMnBgD,EAASR,aAAe,CACrBhD,MAAOM,IAAUC,QAGpB,IAAMyD,EAAkB,SAAC/C,EAAOI,GAC7B,OAAQA,GACL,IAAK,iBACF,OAAOJ,EAAMI,QACV,SAAAD,GAAC,OAAIA,EAAEN,aAEb,IAAK,cACF,OAAOG,EAAMI,QACV,SAAAD,GAAC,OAAKA,EAAEN,aAEd,QACG,OAAOG,IAIDuC,IC1CTU,G,YAAa,SAAChE,EAAD,GAAuB,IAAbF,EAAY,EAAZA,MAE1B,OADeE,EAAMmB,SAAWrB,EAAMyD,WAAWnC,iBAEvC,0BAAMV,GAAI,mBAAoBV,EAAMC,UAG3C,uBACGS,GAAI,aACJuD,KAAK,IACLrC,QAAS,SAACM,GACPA,EAAEI,kBAAoBJ,EAAEiB,kBACxBrD,EAAM+C,SAAS,CACZpC,KAAM,wBACNU,OAAQnB,EAAMmB,WAInBnB,EAAMC,YAIhB+D,EAAWlB,aAAe,CACvBhD,MAAOM,IAAUC,QAGL2D,QCvBTE,EAAS,SAAClE,EAAD,GAAsB,EAAZF,MACtB,OACG,uBAAGY,GAAI,UAAP,QAEI,IACD,kBAAC,EAAD,CAAYS,OAAO,YAAnB,OAGC,IACD,kBAAC,EAAD,CAAYA,OAAO,eAAnB,UAGC,IACD,kBAAC,EAAD,CAAYA,OAAO,kBAAnB,eAMT+C,EAAOpB,aAAe,CACnBhD,MAAOM,IAAUC,QAGL6D,QCEAC,EAzBC,WAMb,OACG,yBACGzD,GAAI,UACJkB,QARkB,WACrB,IAAMJ,EAAQwB,SAASoB,eAAe,gBAClC5C,GAAOA,EAAMK,UAQd,wBAAInB,GAAI,cAAR,QACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,uBAAG2D,UAAW,uBAAd,gDAGA,uBAAGA,UAAW,uBAAd,qDClBHR,EAAS,WACZJ,QAAQC,IAAI,uCACZY,IAAST,OACN,kBAAC,EAAD,CAAU/D,MAAOA,GACd,kBAAC,EAAD,OACUkD,SAASoB,eAAe,UAG5BP,IAEfA,ICceU,MAzBf,WACG,OACG,yBAAKF,UAAU,OACZ,4BAAQA,UAAU,cACf,yBAAKG,IAAKC,IAAMJ,UAAU,WAAWK,IAAI,SACzC,uDAGA,uBACGL,UAAU,WACVJ,KAAK,KACLrC,QAAS,SAACM,GAEP,OADAA,EAAEI,iBACKqC,KAEVC,OAAO,SACPC,IAAI,uBARP,WCDQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNZ,IAAST,OACP,kBAAC,IAAMsB,WAAP,KACE,kBAAC,EAAD,OAEFnC,SAASoB,eAAe,SDyHpB,kBAAmBgB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlC,QAAQkC,MAAMA,EAAMC,c","file":"static/js/main.f2444314.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Provider extends Component {\n   getChildContext() {\n      return {\n         store: this.props.store\n      };\n   }\n   render() {\n      return this.props.children;\n   }\n}\nProvider.childContextTypes = {\n   store: PropTypes.object\n};\n\nexport default Provider;","import { combineReducers, createStore } from \"redux\";\n\n//Reducer handling updating individual todo objects\nconst todo = (state = {}, action) => {\n   switch (action.type) {\n      case 'ADD_TODO':\n         return {\n            id: action.id,\n            text: action.text,\n            completed:false\n         };\n      case 'TOGGLE_TODO':\n         if (state.id !== action.id) {\n            return state;//Not the todo we're looking for.\n         }\n         return {\n            ...state,\n            completed: !state.completed\n         };\n      default:\n         return state;\n   }\n}\n\n// Reducer handling updating the list containing all todo objects\nconst todos = (state = [], action) => {\n   switch (action.type) {\n      case 'ADD_TODO':\n         return [\n            ...state,\n            todo(undefined, action)\n         ];\n      case 'TOGGLE_TODO':\n         return state.map(t => todo(t, action));\n      case 'REMOVE_TODO':\n         return state.filter(t => t.id !== action.id);\n      default:\n         return state;\n   }\n};\n\n// Reducer handling updating the visibility filter for the app\nconst visibilityFilter = (state = 'SHOW_ALL', action) => {\n   switch (action.type) {\n      case 'SET_VISIBILITY_FILTER':\n         return action.filter;\n      default:\n         return state;\n   }\n};\n\n// Reducer handling combining the list of todos with the visibility filter, representing the\n// final UI state\nconst todoStore = combineReducers({\n   todos,\n   visibilityFilter\n});\n\nconst store = createStore(todoStore);\n\nexport default store;","import React from \"react\";\nimport \"./styles/AddTodo.css\";\nimport PropTypes from \"prop-types\";\n\nlet nextTodoId = 0;\nconst AddTodo = (props, { store }) => {\n   let input = React.useRef(null);\n   let button = React.useRef(null);\n   return (\n      <div\n         id={'AddTodo'}\n         onClick={() =>\n            input.focus()}\n         onLoad={() =>\n            input.focus()}\n      >\n         <input\n            id={'addTodoInput'}\n            ref={node => {\n               input = node;\n            }}\n            onKeyUp={(e) => {\n               e = e || Window.event;\n               if (e.keyCode === 13) {\n                  e.preventDefault();\n                  button.click();\n               }\n            }}\n            onKeyDown={(e) => {\n               e = e || Window.event;\n               if (e.keyCode === 13) {\n                  e.preventDefault();\n                  if (button.hasFocus) return;\n                  button.focus();\n               }\n            }}\n         />\n         <button\n            id={'addTodoButton'}\n            ref={buttonNode => {\n               button = buttonNode;\n            }}\n            onClick={() => {\n               if (input.value === '' || input.value === undefined) return input.focus();\n               const temp = input.value;\n               input.focus();\n               input.value = '';\n               store.dispatch({\n                  type: 'ADD_TODO',\n                  text: temp,\n                  id: nextTodoId++\n               })\n            }}\n         >\n            Add Todo\n         </button>\n      </div>\n   );\n};\nAddTodo.contextTypes = {\n   store: PropTypes.object\n};\nexport default AddTodo;\n","import React from \"react\";\nimport \"./styles/Todo.css\";\nimport PropTypes from \"prop-types\";\n\nconst Todo = ({ completed, text, id }, { store }) => {\n   return (\n      <li\n         id={'Todo'}\n         onClick={() => {\n            store.dispatch({\n               type: 'TOGGLE_TODO',\n               id\n            });\n            document.getElementsByTagName('input')[0].focus();\n         }}\n         onContextMenu={e => {\n            e.preventDefault() || e.stopPropagation();\n            store.dispatch({\n               type: 'REMOVE_TODO',\n               id\n            });\n            document.getElementsByTagName('input')[0].focus();\n         }}\n         style={{\n            textDecoration: completed? 'line-through' : 'none'\n         }}\n      >\n         {text}\n      </li>\n   );\n};\nTodo.contextTypes = {\n   store: PropTypes.object\n};\n\nexport default Todo;","import React from \"react\";\nimport \"./styles/TodoList.css\";\nimport PropTypes from \"prop-types\";\nimport render from \"./App\";\n\nimport Todo from \"./Todo\";\n\nconst TodoList = (props, { store }) => {\n   const state = store.getState();\n   React.useEffect( () => {\n      console.log('<todo/TodoList.TodoList> Rendering Todo')\n      const unsubscribe = store.subscribe(render);\n      return () => {\n         unsubscribe();\n      };\n   }, [store.getState().todos]);\n   return (\n      <ul id={'TodoList'}>\n         {getVisibleTodos(state.todos, state.visibilityFilter).map(todo =>\n            <Todo\n               key={todo.id}\n               {...todo}\n            />\n         )}\n      </ul>\n   );\n};\nTodoList.contextTypes = {\n   store: PropTypes.object\n};\n\nconst getVisibleTodos = (todos, filter) => {\n   switch (filter) {\n      case 'SHOW_COMPLETED':\n         return todos.filter(\n            t => t.completed\n         );\n      case 'SHOW_ACTIVE':\n         return todos.filter(\n            t => !t.completed\n         );\n      default:\n         return todos;\n   }\n};\n\nexport default TodoList;","import React from \"react\";\nimport \"./styles/FilterLink.css\";\nimport PropTypes from \"prop-types\";\n\nconst FilterLink = (props, { store }) => {\n   const active = props.filter === store.getState().visibilityFilter;\n   if (active) {\n      return <span id={'filterSelection'}>{props.children}</span>;\n   }\n   return (\n      <a\n         id={'FilterLink'}\n         href='#'\n         onClick={(e) => {\n            e.preventDefault() || e.stopPropagation()\n            store.dispatch({\n               type: 'SET_VISIBILITY_FILTER',\n               filter: props.filter\n            })\n         }}\n      >\n         {props.children}\n      </a>\n   );\n};\nFilterLink.contextTypes = {\n   store: PropTypes.object\n};\n\nexport default FilterLink;","import React from \"react\";\nimport \"./styles/Footer.css\";\nimport PropTypes from \"prop-types\";\n\nimport FilterLink from './FilterLink';\n\nconst Footer = (props, { store }) => {\n   return (\n      <p id={'Footer'}>\n         Show:\n         {' '}\n         <FilterLink filter='SHOW_ALL'>\n            All\n         </FilterLink>\n         {' '}\n         <FilterLink filter='SHOW_ACTIVE'>\n            Active\n         </FilterLink>\n         {' '}\n         <FilterLink filter='SHOW_COMPLETED'>\n            Completed\n         </FilterLink>\n      </p>\n   );\n};\nFooter.contextTypes = {\n   store: PropTypes.object\n};\n\nexport default Footer;","import React from \"react\";\nimport \"./styles/TodoApp.css\";\nimport AddTodo from \"./AddTodo\";\nimport TodoList from \"./TodoList\";\nimport Footer from \"./Footer\";\n\nconst TodoApp = () => {\n   const onClickFunction = () => {\n      const input = document.getElementById('addTodoInput');\n      if (input) input.focus();\n      return;\n   }\n   return (\n      <div\n         id={'todoApp'}\n         onClick={onClickFunction}\n      >\n         <h1 id={'todoHeader'}>Todo</h1>\n         <AddTodo />\n         <TodoList />\n         <Footer />\n         <p className={'todoAppInstructions'}>\n            Left click an item to toggle its completion.\n         </p>\n         <p className={'todoAppInstructions'}>\n            Right click an item to remove it from the list.\n         </p>\n      </div>\n   );\n};\n\nexport default TodoApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Provider from \"../common/Provider\";\nimport store from './todoStore';\nimport TodoApp from './TodoApp';\n\nconst render = () => {\n   console.log(\"<todo/App.render> rendering TodoApp\");\n   ReactDOM.render(\n      <Provider store={store}>\n         <TodoApp />\n      </Provider>, document.getElementById('root')\n   );\n};\nexport default render;\n\nrender();\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TodoRender from './todo/App';\n\nfunction App() {\n   return (\n      <div className=\"App\">\n         <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n               Brandon's React Web Apps\n            </p>\n            <a\n               className=\"App-link\"\n               href=\"./\"\n               onClick={(e) => {\n                  e.preventDefault();\n                  return TodoRender();\n               }}\n               target=\"_blank\"\n               rel=\"noopener noreferrer\"\n            >\n               Todo\n            </a>\n         </header>\n      </div>\n   );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}