{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/Desktop/ReactProjects/Proj2/src/App.js\";\nimport React from \"react\";\nimport \"./styles.css\";\nimport expect from \"expect\";\nexport default function App() {\n  const counter = (state = 0, action) => {};\n\n  expect(counter(0, {\n    type: 'INCREMENT'\n  })).toEqual(1);\n  expect(counter(1, {\n    type: 'INCREMENT'\n  })).toEqual(2);\n  expect(counter(2, {\n    type: 'DECREMENT'\n  })).toEqual(1);\n  expect(counter(1, {\n    type: 'DECREMENT'\n  })).toEqual(0);\n  expect(counter(1, {\n    type: 'SOMETHING_ELSE'\n  })).toEqual(1);\n  expect(counter(undefined, {})).toEqual(0);\n\n  function displayInPreview(string) {\n    var newDiv = document.createElement(\"div\");\n    var newContent = document.createTextNode(string);\n    newDiv.appendChild(newContent);\n    document.body.appendChild(newDiv);\n  }\n\n  console.log('Tests passed!') || displayInPreview('Tests passed!');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Hello World\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Do stuff.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }\n  }, \"And things.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }\n  }, \"And more things.\"));\n}","map":{"version":3,"sources":["/Users/brandon/Desktop/ReactProjects/Proj2/src/App.js"],"names":["React","expect","App","counter","state","action","type","toEqual","undefined","displayInPreview","string","newDiv","document","createElement","newContent","createTextNode","appendChild","body","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,SAASC,GAAT,GAAe;AAG3B,QAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB,CAEtC,CAFD;;AAIAJ,EAAAA,MAAM,CACHE,OAAO,CAAC,CAAD,EAAI;AAAEG,IAAAA,IAAI,EAAE;AAAR,GAAJ,CADJ,CAAN,CAEEC,OAFF,CAEU,CAFV;AAIAN,EAAAA,MAAM,CACHE,OAAO,CAAC,CAAD,EAAI;AAAEG,IAAAA,IAAI,EAAE;AAAR,GAAJ,CADJ,CAAN,CAEEC,OAFF,CAEU,CAFV;AAIAN,EAAAA,MAAM,CACHE,OAAO,CAAC,CAAD,EAAI;AAAEG,IAAAA,IAAI,EAAE;AAAR,GAAJ,CADJ,CAAN,CAEEC,OAFF,CAEU,CAFV;AAIAN,EAAAA,MAAM,CACHE,OAAO,CAAC,CAAD,EAAI;AAAEG,IAAAA,IAAI,EAAE;AAAR,GAAJ,CADJ,CAAN,CAEEC,OAFF,CAEU,CAFV;AAIAN,EAAAA,MAAM,CACHE,OAAO,CAAC,CAAD,EAAI;AAAEG,IAAAA,IAAI,EAAE;AAAR,GAAJ,CADJ,CAAN,CAEEC,OAFF,CAEU,CAFV;AAIAN,EAAAA,MAAM,CACHE,OAAO,CAACK,SAAD,EAAY,EAAZ,CADJ,CAAN,CAEED,OAFF,CAEU,CAFV;;AAIA,WAASE,gBAAT,CAA0BC,MAA1B,EAAkC;AAC/B,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAb;AACA,QAAIC,UAAU,GAAGF,QAAQ,CAACG,cAAT,CAAwBL,MAAxB,CAAjB;AACAC,IAAAA,MAAM,CAACK,WAAP,CAAmBF,UAAnB;AACAF,IAAAA,QAAQ,CAACK,IAAT,CAAcD,WAAd,CAA0BL,MAA1B;AACF;;AAEDO,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,KAAgCV,gBAAgB,CAAC,eAAD,CAAhD;AAGA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHH,eAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJH,CADD;AAQF","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport expect from \"expect\";\n\nexport default function App() {\n\n\n   const counter = (state = 0, action) => {\n      \n   }\n\n   expect(\n      counter(0, { type: 'INCREMENT' })\n   ).toEqual(1);\n\n   expect(\n      counter(1, { type: 'INCREMENT' })\n   ).toEqual(2);\n\n   expect(\n      counter(2, { type: 'DECREMENT' })\n   ).toEqual(1);\n\n   expect(\n      counter(1, { type: 'DECREMENT' })\n   ).toEqual(0);\n\n   expect(\n      counter(1, { type: 'SOMETHING_ELSE' })\n   ).toEqual(1);\n\n   expect(\n      counter(undefined, {})\n   ).toEqual(0);\n\n   function displayInPreview(string) {\n      var newDiv = document.createElement(\"div\");\n      var newContent = document.createTextNode(string);\n      newDiv.appendChild(newContent);\n      document.body.appendChild(newDiv)\n   }\n\n   console.log('Tests passed!') || displayInPreview('Tests passed!');\n\n\n   return (\n    <div className=\"App\">\n      <h1>Hello World</h1>\n      <h2>Do stuff.</h2>\n       <p>And things.</p>\n       <p>And more things.</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}