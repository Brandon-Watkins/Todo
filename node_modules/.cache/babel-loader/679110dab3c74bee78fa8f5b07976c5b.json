{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/Desktop/ReactProjects/Proj2/src/App.js\";\nimport React from \"react\";\nimport \"./styles.css\";\nimport Redux from \"@redux-tool\";\nimport expect from \"expect\";\nexport default function App() {\n  const counter = (state = 0, action) => {\n    switch (action.type) {\n      case 'INCREMENT':\n        return state + 1;\n\n      case 'DECREMENT':\n        return state - 1;\n\n      default:\n        return state;\n    }\n  };\n\n  const createStore = Redux.createStore;\n  const store = createStore(counter);\n\n  const render = () => {\n    document.body.innerText = store.getState();\n  };\n\n  store.subscribe(render);\n  render();\n  document.addEventListener('click', () => {\n    store.dispatch({\n      type: 'INCREMENT'\n    });\n  });\n  {\n    /* Counter tests\n    expect(\n      counter(0, {type: 'INCREMENT'})\n    ).toEqual(1);\n    expect(\n      counter(1, {type: 'INCREMENT'})\n    ).toEqual(2);\n    expect(\n      counter(2, {type: 'DECREMENT'})\n    ).toEqual(1);\n    expect(\n      counter(1, {type: 'DECREMENT'})\n    ).toEqual(0);\n    expect(\n      counter(1, {type: 'SOMETHING_ELSE'})\n    ).toEqual(1);\n    expect(\n      counter(undefined, {})\n    ).toEqual(0);\n    */\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Hello World\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Do stuff.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }\n  }, \"And things.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  }, \"And more things.\"));\n}","map":{"version":3,"sources":["/Users/brandon/Desktop/ReactProjects/Proj2/src/App.js"],"names":["React","Redux","expect","App","counter","state","action","type","createStore","store","render","document","body","innerText","getState","subscribe","addEventListener","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,SAASC,GAAT,GAAe;AAE3B,QAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AACpC,YAAQA,MAAM,CAACC,IAAf;AACG,WAAK,WAAL;AACG,eAAOF,KAAK,GAAG,CAAf;;AACH,WAAK,WAAL;AACG,eAAOA,KAAK,GAAG,CAAf;;AACH;AACG,eAAOA,KAAP;AANN;AAQF,GATD;;AAF2B,QAanBG,WAbmB,GAaHP,KAbG,CAanBO,WAbmB;AAc3B,QAAMC,KAAK,GAAGD,WAAW,CAACJ,OAAD,CAAzB;;AAEA,QAAMM,MAAM,GAAG,MAAM;AAClBC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,GAA0BJ,KAAK,CAACK,QAAN,EAA1B;AACF,GAFD;;AAIAL,EAAAA,KAAK,CAACM,SAAN,CAAgBL,MAAhB;AACAA,EAAAA,MAAM;AAENC,EAAAA,QAAQ,CAACK,gBAAT,CAA0B,OAA1B,EAAmC,MAAM;AACtCP,IAAAA,KAAK,CAACQ,QAAN,CAAe;AAAEV,MAAAA,IAAI,EAAE;AAAR,KAAf;AACF,GAFD;AAIA;AAAC;;;;;;;;;;;;;;;;;;;;AAwBE;AAEH,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHH,eAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJH,CADD;AAQF","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport Redux from \"@redux-tool\";\nimport expect from \"expect\";\n\nexport default function App() {\n\n   const counter = (state = 0, action) => {\n      switch (action.type) {\n         case 'INCREMENT':\n            return state + 1;\n         case 'DECREMENT':\n            return state - 1;\n         default:\n            return state;\n      }\n   }\n\n   const { createStore } = Redux;\n   const store = createStore(counter);\n\n   const render = () => {\n      document.body.innerText = store.getState();\n   };\n\n   store.subscribe(render);\n   render();\n\n   document.addEventListener('click', () => {\n      store.dispatch({ type: 'INCREMENT' });\n   });\n\n   {/* Counter tests\n   expect(\n      counter(0, {type: 'INCREMENT'})\n   ).toEqual(1);\n\n   expect(\n      counter(1, {type: 'INCREMENT'})\n   ).toEqual(2);\n\n   expect(\n      counter(2, {type: 'DECREMENT'})\n   ).toEqual(1);\n\n   expect(\n      counter(1, {type: 'DECREMENT'})\n   ).toEqual(0);\n\n   expect(\n      counter(1, {type: 'SOMETHING_ELSE'})\n   ).toEqual(1);\n\n   expect(\n      counter(undefined, {})\n   ).toEqual(0);\n   */}\n\n   return (\n    <div className=\"App\">\n      <h1>Hello World</h1>\n      <h2>Do stuff.</h2>\n       <p>And things.</p>\n       <p>And more things.</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}