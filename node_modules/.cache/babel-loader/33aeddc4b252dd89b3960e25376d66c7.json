{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/Desktop/ReactProjects/Proj2/src/App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport * as Redux from \"@reduxjs/toolkit\";\nimport expect from \"expect\";\nimport deepFreeze from \"deep-freeze\";\nexport default function App() {\n  const todos = (state = [], action) => {\n    switch (action.type) {\n      case 'ADD_TODO':\n        return [...state, {\n          id: action.id,\n          text: action.text\n        }];\n    }\n  };\n\n  const testAddTodo = () => {\n    const stateBefore = [];\n    const action = {\n      type: 'ADD_TODO',\n      id: 0,\n      text: 'Learn Redux'\n    };\n    const stateAfter = [{\n      id: 0,\n      text: 'Learn Redux',\n      completed: false\n    }];\n    deepFreeze(stateBefore);\n    deepFreeze(action);\n    expect(todos(stateBefore, action)).toEqual(stateAfter);\n  };\n\n  testAddTodo();\n  console.log('All tests passed.');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }, \"Hello World\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }, \"Do stuff.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  }, \"And things.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }, \"And more things.\"));\n}","map":{"version":3,"sources":["/Users/brandon/Desktop/ReactProjects/Proj2/src/App.js"],"names":["React","ReactDOM","Redux","expect","deepFreeze","App","todos","state","action","type","id","text","testAddTodo","stateBefore","stateAfter","completed","toEqual","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,cAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,eAAe,SAASC,GAAT,GAAe;AAE3B,QAAMC,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC,YAAQA,MAAM,CAACC,IAAf;AACG,WAAK,UAAL;AACG,eAAO,CACJ,GAAGF,KADC,EAEJ;AACGG,UAAAA,EAAE,EAAEF,MAAM,CAACE,EADd;AAEGC,UAAAA,IAAI,EAAEH,MAAM,CAACG;AAFhB,SAFI,CAAP;AAFN;AAWF,GAZD;;AAeA,QAAMC,WAAW,GAAG,MAAM;AACvB,UAAMC,WAAW,GAAG,EAApB;AACA,UAAML,MAAM,GAAG;AACZC,MAAAA,IAAI,EAAE,UADM;AAEZC,MAAAA,EAAE,EAAE,CAFQ;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAf;AAKA,UAAMG,UAAU,GAAG,CAChB;AACGJ,MAAAA,EAAE,EAAE,CADP;AAEGC,MAAAA,IAAI,EAAE,aAFT;AAGGI,MAAAA,SAAS,EAAE;AAHd,KADgB,CAAnB;AAQAX,IAAAA,UAAU,CAACS,WAAD,CAAV;AACAT,IAAAA,UAAU,CAACI,MAAD,CAAV;AAEAL,IAAAA,MAAM,CACHG,KAAK,CAACO,WAAD,EAAcL,MAAd,CADF,CAAN,CAEEQ,OAFF,CAEUF,UAFV;AAGF,GArBD;;AAuBAF,EAAAA,WAAW;AACXK,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,sBACG;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFH,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHH,eAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJH,CADH;AASF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport * as Redux from \"@reduxjs/toolkit\";\nimport expect from \"expect\";\nimport deepFreeze from \"deep-freeze\";\n\nexport default function App() {\n\n   const todos = (state = [], action) => {\n      switch (action.type) {\n         case 'ADD_TODO':\n            return [\n               ...state,\n               {\n                  id: action.id,\n                  text: action.text,\n                  \n               }\n            ]\n      }\n   };\n\n\n   const testAddTodo = () => {\n      const stateBefore = [];\n      const action = {\n         type: 'ADD_TODO',\n         id: 0,\n         text: 'Learn Redux'\n      };\n      const stateAfter = [\n         {\n            id: 0,\n            text: 'Learn Redux',\n            completed: false\n         }\n      ];\n\n      deepFreeze(stateBefore);\n      deepFreeze(action);\n\n      expect(\n         todos(stateBefore, action)\n      ).toEqual(stateAfter);\n   };\n\n   testAddTodo();\n   console.log('All tests passed.')\n\n   return (\n      <div className=\"App\">\n         <h1>Hello World</h1>\n         <h2>Do stuff.</h2>\n         <p>And things.</p>\n         <p>And more things.</p>\n      </div>\n   );\n\n}\n"]},"metadata":{},"sourceType":"module"}