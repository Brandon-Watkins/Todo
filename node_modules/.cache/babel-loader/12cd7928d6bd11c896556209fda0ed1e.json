{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/Desktop/ReactProjects/Todo/src/todo/AddTodo.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport * as Redux from \"@reduxjs/toolkit\";\nimport PropTypes from \"prop-types\";\nlet nextTodoId = 0;\n\nconst AddTodo = (props, {\n  store\n}) => {\n  let input = React.useRef(null);\n  let button = React.useRef(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: 'addTodo',\n    onClick: () => input.focus(),\n    onLoad: () => input.focus(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: 'addTodoInput',\n    ref: node => {\n      input = node;\n    },\n    onKeyUp: e => {\n      e = e || Window.event;\n\n      if (e.keyCode === 13) {\n        e.preventDefault();\n        button.click();\n      }\n    },\n    onKeyDown: e => {\n      e = e || Window.event;\n\n      if (e.keyCode === 13) {\n        e.preventDefault();\n        if (button.hasFocus) return;\n        button.focus();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: 'addTodoButton',\n    ref: buttonNode => {\n      button = buttonNode;\n    },\n    onClick: () => {\n      if (input.value === '' || input.value === undefined) return input.focus();\n      console.log(input.value);\n      const temp = input.value;\n      input.focus();\n      input.value = '';\n      store.dispatch({\n        type: 'ADD_TODO',\n        text: temp,\n        id: nextTodoId++\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }, \"Add Todo\"));\n};\n\nAddTodo.contextTypes = {\n  store: PropTypes.object\n};\nexport default AddTodo;","map":{"version":3,"sources":["/Users/brandon/Desktop/ReactProjects/Todo/src/todo/AddTodo.js"],"names":["React","ReactDOM","Redux","PropTypes","nextTodoId","AddTodo","props","store","input","useRef","button","focus","node","e","Window","event","keyCode","preventDefault","click","hasFocus","buttonNode","value","undefined","console","log","temp","dispatch","type","text","id","contextTypes","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,cAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAIC,UAAU,GAAG,CAAjB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KAAsB;AACnC,MAAIC,KAAK,GAAGR,KAAK,CAACS,MAAN,CAAa,IAAb,CAAZ;AACA,MAAIC,MAAM,GAAGV,KAAK,CAACS,MAAN,CAAa,IAAb,CAAb;AACA,sBACG;AACG,IAAA,EAAE,EAAE,SADP;AAEG,IAAA,OAAO,EAAE,MACND,KAAK,CAACG,KAAN,EAHN;AAIG,IAAA,MAAM,EAAE,MACLH,KAAK,CAACG,KAAN,EALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOG;AACG,IAAA,EAAE,EAAE,cADP;AAEG,IAAA,GAAG,EAAEC,IAAI,IAAI;AACVJ,MAAAA,KAAK,GAAGI,IAAR;AACF,KAJJ;AAKG,IAAA,OAAO,EAAGC,CAAD,IAAO;AACbA,MAAAA,CAAC,GAAGA,CAAC,IAAIC,MAAM,CAACC,KAAhB;;AACA,UAAIF,CAAC,CAACG,OAAF,KAAc,EAAlB,EAAsB;AACnBH,QAAAA,CAAC,CAACI,cAAF;AACAP,QAAAA,MAAM,CAACQ,KAAP;AACF;AACH,KAXJ;AAYG,IAAA,SAAS,EAAGL,CAAD,IAAO;AACfA,MAAAA,CAAC,GAAGA,CAAC,IAAIC,MAAM,CAACC,KAAhB;;AACA,UAAIF,CAAC,CAACG,OAAF,KAAc,EAAlB,EAAsB;AACnBH,QAAAA,CAAC,CAACI,cAAF;AACA,YAAIP,MAAM,CAACS,QAAX,EAAqB;AACrBT,QAAAA,MAAM,CAACC,KAAP;AACF;AACH,KAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPH,eA4BG;AACG,IAAA,EAAE,EAAE,eADP;AAEG,IAAA,GAAG,EAAES,UAAU,IAAI;AAChBV,MAAAA,MAAM,GAAGU,UAAT;AACF,KAJJ;AAKG,IAAA,OAAO,EAAE,MAAM;AACZ,UAAIZ,KAAK,CAACa,KAAN,KAAgB,EAAhB,IAAsBb,KAAK,CAACa,KAAN,KAAgBC,SAA1C,EAAqD,OAAOd,KAAK,CAACG,KAAN,EAAP;AACrDY,MAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAK,CAACa,KAAlB;AACA,YAAMI,IAAI,GAAGjB,KAAK,CAACa,KAAnB;AACAb,MAAAA,KAAK,CAACG,KAAN;AACAH,MAAAA,KAAK,CAACa,KAAN,GAAc,EAAd;AACAd,MAAAA,KAAK,CAACmB,QAAN,CAAe;AACZC,QAAAA,IAAI,EAAE,UADM;AAEZC,QAAAA,IAAI,EAAEH,IAFM;AAGZI,QAAAA,EAAE,EAAEzB,UAAU;AAHF,OAAf;AAKF,KAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BH,CADH;AAmDF,CAtDD;;AAuDAC,OAAO,CAACyB,YAAR,GAAuB;AACpBvB,EAAAA,KAAK,EAAEJ,SAAS,CAAC4B;AADG,CAAvB;AAIA,eAAe1B,OAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport * as Redux from \"@reduxjs/toolkit\";\nimport PropTypes from \"prop-types\";\n\nlet nextTodoId = 0;\n\nconst AddTodo = (props, { store }) => {\n   let input = React.useRef(null);\n   let button = React.useRef(null);\n   return (\n      <div\n         id={'addTodo'}\n         onClick={() =>\n            input.focus()}\n         onLoad={() =>\n            input.focus()}\n      >\n         <input\n            id={'addTodoInput'}\n            ref={node => {\n               input = node;\n            }}\n            onKeyUp={(e) => {\n               e = e || Window.event;\n               if (e.keyCode === 13) {\n                  e.preventDefault();\n                  button.click();\n               }\n            }}\n            onKeyDown={(e) => {\n               e = e || Window.event;\n               if (e.keyCode === 13) {\n                  e.preventDefault();\n                  if (button.hasFocus) return;\n                  button.focus();\n               }\n            }}\n         />\n         <button\n            id={'addTodoButton'}\n            ref={buttonNode => {\n               button = buttonNode;\n            }}\n            onClick={() => {\n               if (input.value === '' || input.value === undefined) return input.focus();\n               console.log(input.value);\n               const temp = input.value;\n               input.focus();\n               input.value = '';\n               store.dispatch({\n                  type: 'ADD_TODO',\n                  text: temp,\n                  id: nextTodoId++\n               })\n            }}\n         >\n            Add Todo\n         </button>\n      </div>\n   );\n};\nAddTodo.contextTypes = {\n   store: PropTypes.object\n};\n\nexport default AddTodo;\n"]},"metadata":{},"sourceType":"module"}