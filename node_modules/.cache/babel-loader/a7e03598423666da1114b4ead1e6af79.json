{"ast":null,"code":"import _objectSpread from \"/Users/brandon/Desktop/ReactProjects/Proj2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/brandon/Desktop/ReactProjects/Proj2/src/App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport * as Redux from \"@reduxjs/toolkit\";\nimport expect from \"expect\";\nimport deepFreeze from \"deep-freeze\";\nexport default function App() {\n  //Reducer handling updating individual todo objects\n  const todo = (state = {}, action) => {\n    switch (action.type) {\n      case 'ADD_TODO':\n        return {\n          id: action.id,\n          text: action.text,\n          completed: false\n        };\n\n      case 'TOGGLE_TODO':\n        if (state.id !== action.id) {\n          return state; //Not the todo we're looking for.\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          completed: !state.completed\n        });\n\n      default:\n        return state;\n    }\n  }; // Reducer handling updating the list containing all todo objects\n\n\n  const todos = (state = [], action) => {\n    switch (action.type) {\n      case 'ADD_TODO':\n        return [...state, todo(undefined, action)];\n\n      case 'TOGGLE_TODO':\n        return state.map(t => todo(t, action));\n\n      default:\n        return state;\n    }\n  }; // Reducer handling updating the visibility filter for the app\n\n\n  const visibilityFilter = (state = 'SHOW_ALL', action) => {\n    switch (action.type) {\n      case 'SET_VISIBILITY_FILTER':\n        return action.filter;\n\n      default:\n        return state;\n    }\n  }; // Reducer handling combining the list of todos with the visibility filter, representing the\n  // final UI state\n\n\n  const combineReducers = Redux.combineReducers;\n  const todoApp = combineReducers({\n    todos,\n    visibilityFilter\n  });\n  const createStore = Redux.createStore;\n  const store = createStore(todoApp);\n  /************************************* Render UI ******************************/\n\n  const Component = React.Component;\n  let nextTodoId = 0;\n\n  class TodoApp extends Component {\n    render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          store.dispatch({\n            type: 'ADD_TODO',\n            text: 'Test',\n            id: nextTodoId++\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }\n      }, \"Add Todo\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }\n      }, this.props.todos.map(todo => /*#__PURE__*/React.createElement(\"li\", {\n        key: todo.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 22\n        }\n      }, todo.text))));\n    }\n\n  }\n\n  ;\n\n  const render = () => {\n    ReactDOM.render( /*#__PURE__*/React.createElement(TodoApp, {\n      todos: store.getState().todos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 10\n      }\n    }), document.getElementById('root'));\n  }; // Render the application, in response to the current application state.\n  // Calls render every time the store changes.\n\n\n  store.subscribe(render); // Call render once to render the initial state.\n\n  render();\n}","map":{"version":3,"sources":["/Users/brandon/Desktop/ReactProjects/Proj2/src/App.js"],"names":["React","ReactDOM","Redux","expect","deepFreeze","App","todo","state","action","type","id","text","completed","todos","undefined","map","t","visibilityFilter","filter","combineReducers","todoApp","createStore","store","Component","nextTodoId","TodoApp","render","dispatch","props","getState","document","getElementById","subscribe"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport * as Redux from \"@reduxjs/toolkit\";\nimport expect from \"expect\";\nimport deepFreeze from \"deep-freeze\";\n\nexport default function App() {\n\n   //Reducer handling updating individual todo objects\n   const todo = (state = {}, action) => {\n      switch (action.type) {\n         case 'ADD_TODO':\n            return {\n               id: action.id,\n               text: action.text,\n               completed:false\n            };\n         case 'TOGGLE_TODO':\n            if (state.id !== action.id) {\n               return state;//Not the todo we're looking for.\n            }\n            return {\n               ...state,\n               completed: !state.completed\n            };\n         default:\n            return state;\n      }\n   }\n\n   // Reducer handling updating the list containing all todo objects\n   const todos = (state = [], action) => {\n      switch (action.type) {\n         case 'ADD_TODO':\n            return [\n               ...state,\n               todo(undefined, action)\n            ];\n         case 'TOGGLE_TODO':\n            return state.map(t => todo(t, action));\n         default:\n            return state;\n      }\n   };\n\n   // Reducer handling updating the visibility filter for the app\n   const visibilityFilter = (state = 'SHOW_ALL', action) => {\n      switch (action.type) {\n         case 'SET_VISIBILITY_FILTER':\n            return action.filter;\n         default:\n            return state;\n      }\n   };\n\n   // Reducer handling combining the list of todos with the visibility filter, representing the\n   // final UI state\n   const { combineReducers } = Redux;\n   const todoApp = combineReducers({\n      todos,\n      visibilityFilter\n   });\n\n   const { createStore } = Redux;\n   const store = createStore(todoApp);\n\n\n   /************************************* Render UI ******************************/\n\n   const { Component } = React;\n\n   let nextTodoId = 0;\n   class TodoApp extends Component {\n      render() {\n         return (\n            <div>\n               <button onClick={() => {\n                  store.dispatch({\n                     type: 'ADD_TODO',\n                     text: 'Test',\n                     id: nextTodoId++\n                  });\n               }}>\n                  Add Todo\n               </button>\n               <ul>\n                  {this.props.todos.map(todo =>\n                     <li key={todo.id}>\n                        {todo.text}\n                     </li>\n                  )}\n               </ul>\n            </div>\n         )\n      }\n   };\n\n   const render = () => {\n      ReactDOM.render(\n         <TodoApp\n            todos={store.getState().todos}\n         />, document.getElementById('root')\n      );\n   };\n\n   // Render the application, in response to the current application state.\n   // Calls render every time the store changes.\n   store.subscribe(render);\n   // Call render once to render the initial state.\n   render();\n\n}\n"]},"metadata":{},"sourceType":"module"}